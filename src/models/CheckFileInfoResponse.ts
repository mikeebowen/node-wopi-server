interface ICheckFileInfoResponse {
  AADUserObjectId?: string;
  AccessTokenExpiry?: number;
  AllowAddActivitiesUserBatching?: boolean;
  AllowAdditionalMicrosoftServices?: boolean;
  AllowEarlyFeatures?: boolean;
  AllowErrorReportPrompt?: boolean;
  AllowExternalMarketplace?: boolean;
  AppCatalogUrl?: string;
  AppliedPolicyId?: string;
  BaseFileName: string;
  BreadcrumbBrandName?: string;
  BreadcrumbBrandUrl?: string;
  BreadcrumbDocName?: string;
  BreadcrumbDocUrl?: string;
  BreadcrumbFolderName?: string;
  BreadcrumbFolderUrl?: string;
  ClientUrl?: string;
  CloseButtonClosesWindow?: boolean;
  ClosePostMessage?: boolean;
  CloseUrl?: string;
  DirectInvokeDAVUrl?: string;
  DisableBrowserCachingOfUserContent?: boolean;
  DisablePrint?: boolean;
  DisableTranslation?: boolean;
  DownloadUrl?: string;
  EditAndReplyUrl?: string;
  EditingCannotSave?: boolean;
  EditModePostMessage?: boolean;
  EditNotificationPostMessage?: boolean;
  EmbeddingPageOrigin?: string;
  EmbeddingPageSessionInfo?: string;
    // TODO: This is in the documentation, but not the tests. Find out which is correct
// EnabledApplicationFeatures?: string[];
  FileEmbedCommandPostMessage?: boolean;
  FileEmbedCommandUrl?: string;
  FileExtension?: string;
  FileNameMaxLength?: number;
  FileSharingPostMessage?: boolean;
  FileSharingUrl?: string;
  FileUrl?: string;
  FileVersionPostMessage?: boolean;
  FileVersionUrl?: string;
  HostAuthenticationId?: string;
  HostAuthenticationIdType?: string;
  HostDivSyndicationViewUrl?: string;
  HostEditUrl?: string;
  HostEmbeddedEditUrl?: string;
  HostEmbeddedViewUrl?: string;
  HostName?: string;
  HostNotes?: string;
  HostRestUrl?: string;
  HostViewUrl?: string;
  InsertImagePostMessage?: boolean;
  IrmPolicyDescription?: string;
  IrmPolicyTitle?: string;
  IsAnonymousUser?: boolean;
  IsEduUser?: boolean;
  IsYammerEnabled?: boolean;
  LastModifiedTime?: string;
  LicenseCheckForEditIsEnabled?: boolean;
  LicensedOrganization?: string;
  OfficeCollaborationServiceEndpointUrl?: string;
  // TODO: This is in the documentation, but not the tests. Find out which is correct
  // OpenInClientCommandUrl?: string;
  OpenInClientPostMessage?: boolean;
  OwnerId: string;
  PermissionsPostMessage?: boolean;
  PolicyCheckPostMessage?: boolean;
  PostMessageOrigin?: string;
  PresenceProvider?: string;
  PresenceUserId?: string;
  PrivacyUrl?: string;
  ProtectedFile?: boolean;
  ProtectInClient?: boolean;
  ReadOnly?: boolean;
  ReportAbusePostMessage?: boolean;
  ReportAbuseUrl?: string;
  RestrictedWebViewOnly?: boolean;
  SafeLinksStatus?: string;
  SHA256?: string;
  SignInUrl?: string;
  SignoutUrl?: string;
  Size: number;
  SupportedShareUrlTypes?: string[];
  SupportsAddActivities?: boolean;
  SupportsCheckPolicy?: boolean;
  SupportsCheckUserAccess?: boolean;
  SupportsCoauth?: boolean;
  SupportsCobalt?: boolean;
  SupportsContactsResolution?: boolean;
  SupportsContainers?: boolean;
  SupportsDeleteFile?: boolean;
  SupportsEcosystem?: boolean;
  SupportsExtendedLockLength?: boolean;
  SupportsFileCreation?: boolean;
  SupportsFileUserValue?: boolean;
  SupportsFolders?: boolean;
  SupportsGetActivities?: boolean;
  SupportsGetLock?: boolean;
  SupportsGrantUserAccess?: boolean;
  SupportsLocks?: boolean;
  SupportsPolicies?: boolean;
  SupportsRename?: boolean;
  SupportsReviewing?: boolean;
  SupportsScenarioLinks?: boolean;
  SupportsSecureStore?: boolean;
  SupportsUpdate?: boolean;
  SupportsUserInfo?: boolean;
  TenantId?: string;
  TermsOfUseUrl?: string;
  TimeZone?: string;
  UniqueContentId?: string;
  UserCanAttend?: boolean;
  UserCanNotWriteRelative?: boolean;
  UserCanPresent?: boolean;
  UserCanRename?: boolean;
  UserCanReview?: boolean;
  UserCanWrite?: boolean;
  UserFriendlyName?: string;
  UserId?: string;
  UserInfo?: string;
  // TODO: This is in the documentation, but not the tests. Find out which is correct
// UserPrincipalName?: string;
  Version: string;
  WebEditingDisabled?: boolean;
  WorkflowType?: string[];
  WorkflowUrl?: string;
};

export class CheckFileInfoResponse {
  AADUserObjectId?: string;
  AccessTokenExpiry?: number;
  AllowAddActivitiesUserBatching?: boolean;
  AllowAdditionalMicrosoftServices?: boolean;
  AllowEarlyFeatures?: boolean;
  AllowErrorReportPrompt?: boolean;
  AllowExternalMarketplace?: boolean;
  AppCatalogUrl?: string;
  AppliedPolicyId?: string;
  BaseFileName: string;
  BreadcrumbBrandName?: string;
  BreadcrumbBrandUrl?: string;
  BreadcrumbDocName?: string;
  BreadcrumbDocUrl?: string;
  BreadcrumbFolderName?: string;
  BreadcrumbFolderUrl?: string;
  ClientUrl?: string;
  CloseButtonClosesWindow?: boolean;
  ClosePostMessage?: boolean;
  CloseUrl?: string;
  DirectInvokeDAVUrl?: string;
  DisableBrowserCachingOfUserContent?: boolean;
  DisablePrint?: boolean;
  DisableTranslation?: boolean;
  DownloadUrl?: string;
  EditAndReplyUrl?: string;
  EditingCannotSave?: boolean;
  EditModePostMessage?: boolean;
  EditNotificationPostMessage?: boolean;
  EmbeddingPageOrigin?: string;
  EmbeddingPageSessionInfo?: string;
  // TODO: This is in the documentation, but not the tests. Find out which is correct
  // EnabledApplicationFeatures?: string[];
  FileEmbedCommandPostMessage?: boolean;
  FileEmbedCommandUrl?: string;
  FileExtension?: string;
  FileNameMaxLength?: number;
  FileSharingPostMessage?: boolean;
  FileSharingUrl?: string;
  FileUrl?: string;
  FileVersionPostMessage?: boolean;
  FileVersionUrl?: string;
  HostAuthenticationId?: string;
  HostAuthenticationIdType?: string;
  HostDivSyndicationViewUrl?: string;
  HostEditUrl?: string;
  HostEmbeddedEditUrl?: string;
  HostEmbeddedViewUrl?: string;
  HostName?: string;
  HostNotes?: string;
  HostRestUrl?: string;
  HostViewUrl?: string;
  InsertImagePostMessage?: boolean;
  IrmPolicyDescription?: string;
  IrmPolicyTitle?: string;
  IsAnonymousUser?: boolean;
  IsEduUser?: boolean;
  IsYammerEnabled?: boolean;
  LastModifiedTime?: string;
  LicenseCheckForEditIsEnabled?: boolean;
  LicensedOrganization?: string;
  OfficeCollaborationServiceEndpointUrl?: string;
  // TODO: This is in the documentation, but not the tests. Find out which is correct
  // OpenInClientCommandUrl: string;
  OpenInClientPostMessage?: boolean;
  OwnerId: string;
  PermissionsPostMessage?: boolean;
  PolicyCheckPostMessage?: boolean;
  PostMessageOrigin?: string;
  PresenceProvider?: string;
  PresenceUserId?: string;
  PrivacyUrl?: string;
  ProtectedFile?: boolean;
  ProtectInClient?: boolean;
  ReadOnly?: boolean;
  ReportAbusePostMessage?: boolean;
  ReportAbuseUrl?: string;
  RestrictedWebViewOnly?: boolean;
  SafeLinksStatus?: string;
  SHA256?: string;
  SignInUrl?: string;
  SignoutUrl?: string;
  Size: number;
  SupportedShareUrlTypes?: string[];
  SupportsAddActivities?: boolean;
  SupportsCheckPolicy?: boolean;
  SupportsCheckUserAccess?: boolean;
  SupportsCoauth?: boolean;
  SupportsCobalt?: boolean;
  SupportsContactsResolution?: boolean;
  SupportsContainers?: boolean;
  SupportsDeleteFile?: boolean;
  SupportsEcosystem?: boolean;
  SupportsExtendedLockLength?: boolean;
  SupportsFileCreation?: boolean;
  SupportsFileUserValue?: boolean;
  SupportsFolders?: boolean;
  SupportsGetActivities?: boolean;
  SupportsGetLock?: boolean;
  SupportsGrantUserAccess?: boolean;
  SupportsLocks?: boolean;
  SupportsPolicies?: boolean;
  SupportsRename?: boolean;
  SupportsReviewing?: boolean;
  SupportsScenarioLinks?: boolean;
  SupportsSecureStore?: boolean;
  SupportsUpdate?: boolean;
  SupportsUserInfo?: boolean;
  TenantId?: string;
  TermsOfUseUrl?: string;
  TimeZone?: string;
  UniqueContentId?: string;
  UserCanAttend?: boolean;
  UserCanNotWriteRelative?: boolean;
  UserCanPresent?: boolean;
  UserCanRename?: boolean;
  UserCanReview?: boolean;
  UserCanWrite?: boolean;
  UserFriendlyName?: string;
  UserId?: string;
  UserInfo?: string;
  // TODO: This is in the documentation, but not the tests. Find out which is correct
  // UserPrincipalName: string;
  Version: string;
  WebEditingDisabled?: boolean;
  WorkflowType?: string[];
  WorkflowUrl?: string;

  constructor(options: ICheckFileInfoResponse) {
    this.AADUserObjectId = options.AADUserObjectId;
    this.AccessTokenExpiry = options.AccessTokenExpiry ?? 0;
    this.AllowAddActivitiesUserBatching = options.AllowAddActivitiesUserBatching;
    this.AllowAdditionalMicrosoftServices = options.AllowAdditionalMicrosoftServices;
    this.AllowEarlyFeatures = options.AllowEarlyFeatures;
    this.AllowErrorReportPrompt = options.AllowErrorReportPrompt;
    this.AllowExternalMarketplace = options.AllowExternalMarketplace;
    this.AppCatalogUrl = options.AppCatalogUrl;
    this.AppliedPolicyId = options.AppliedPolicyId;
    this.BaseFileName = options.BaseFileName ?? '';
    this.BreadcrumbBrandName = options.BreadcrumbBrandName;
    this.BreadcrumbBrandUrl = options.BreadcrumbBrandUrl;
    this.BreadcrumbDocName = options.BreadcrumbDocName;
    this.BreadcrumbDocUrl = options.BreadcrumbDocUrl;
    this.BreadcrumbFolderName = options.BreadcrumbFolderName;
    this.BreadcrumbFolderUrl = options.BreadcrumbFolderUrl;
    this.ClientUrl = options.ClientUrl;
    this.CloseButtonClosesWindow = options.CloseButtonClosesWindow;
    this.ClosePostMessage = options.ClosePostMessage;
    this.CloseUrl = options.CloseUrl;
    this.DirectInvokeDAVUrl = options.DirectInvokeDAVUrl;
    this.DisableBrowserCachingOfUserContent = options.DisableBrowserCachingOfUserContent;
    this.DisablePrint = options.DisablePrint;
    this.DisableTranslation = options.DisableTranslation;
    this.DownloadUrl = options.DownloadUrl;
    this.EditAndReplyUrl = options.EditAndReplyUrl;
    this.EditingCannotSave = options.EditingCannotSave;
    this.EditModePostMessage = options.EditModePostMessage;
    this.EditNotificationPostMessage = options.EditNotificationPostMessage;
    this.EmbeddingPageOrigin = options.EmbeddingPageOrigin;
    this.EmbeddingPageSessionInfo = options.EmbeddingPageSessionInfo;
    // TODO: This is in the documentation, but not the tests. Find out which is correct
    // this.EnabledApplicationFeatures = options.EnabledApplicationFeatures ?? [];
    this.FileEmbedCommandPostMessage = options.FileEmbedCommandPostMessage;
    this.FileEmbedCommandUrl = options.FileEmbedCommandUrl;
    this.FileExtension = options.FileExtension;
    this.FileNameMaxLength = options.FileNameMaxLength ?? 250;
    this.FileSharingPostMessage = options.FileSharingPostMessage;
    this.FileSharingUrl = options.FileSharingUrl;
    this.FileUrl = options.FileUrl;
    this.FileVersionPostMessage = options.FileVersionPostMessage;
    this.FileVersionUrl = options.FileVersionUrl;
    this.HostAuthenticationId = options.HostAuthenticationId;
    this.HostAuthenticationIdType = options.HostAuthenticationIdType;
    this.HostDivSyndicationViewUrl = options.HostDivSyndicationViewUrl;
    this.HostEditUrl = options.HostEditUrl;
    this.HostEmbeddedEditUrl = options.HostEmbeddedEditUrl;
    this.HostEmbeddedViewUrl = options.HostEmbeddedViewUrl;
    this.HostName = options.HostName;
    this.HostNotes = options.HostNotes;
    this.HostRestUrl = options.HostRestUrl;
    this.HostViewUrl = options.HostViewUrl;
    this.InsertImagePostMessage = options.InsertImagePostMessage;
    this.IrmPolicyDescription = options.IrmPolicyDescription;
    this.IrmPolicyTitle = options.IrmPolicyTitle;
    this.IsAnonymousUser = options.IsAnonymousUser;
    this.IsEduUser = options.IsEduUser;
    this.IsYammerEnabled = options.IsYammerEnabled;
    this.LastModifiedTime = options.LastModifiedTime;
    this.LicenseCheckForEditIsEnabled = options.LicenseCheckForEditIsEnabled;
    this.LicensedOrganization = options.LicensedOrganization;
    this.OfficeCollaborationServiceEndpointUrl = options.OfficeCollaborationServiceEndpointUrl;
    // TODO: This is in the documentation, but not the tests. Find out which is correct
    // this.OpenInClientCommandUrl = options.OpenInClientCommandUrl ?? '';
    this.OpenInClientPostMessage = options.OpenInClientPostMessage;
    this.OwnerId = options.OwnerId;
    this.PermissionsPostMessage = options.PermissionsPostMessage;
    this.PolicyCheckPostMessage = options.PolicyCheckPostMessage;
    this.PostMessageOrigin = options.PostMessageOrigin;
    this.PresenceProvider = options.PresenceProvider;
    this.PresenceUserId = options.PresenceUserId;
    this.PrivacyUrl = options.PrivacyUrl;
    this.ProtectedFile = options.ProtectedFile;
    this.ProtectInClient = options.ProtectInClient;
    this.ReadOnly = options.ReadOnly;
    this.ReportAbusePostMessage = options.ReportAbusePostMessage;
    this.ReportAbuseUrl = options.ReportAbuseUrl;
    this.RestrictedWebViewOnly = options.RestrictedWebViewOnly;
    this.SafeLinksStatus = options.SafeLinksStatus;
    this.SHA256 = options.SHA256;
    this.SignInUrl = options.SignInUrl;
    this.SignoutUrl = options.SignoutUrl;
    this.Size = options.Size ?? -1;
    this.SupportedShareUrlTypes = options.SupportedShareUrlTypes ?? [];
    this.SupportsAddActivities = options.SupportsAddActivities;
    this.SupportsCheckPolicy = options.SupportsCheckPolicy;
    this.SupportsCheckUserAccess = options.SupportsCheckUserAccess;
    this.SupportsCoauth = options.SupportsCoauth;
    this.SupportsCobalt = options.SupportsCobalt;
    this.SupportsContactsResolution = options.SupportsContactsResolution;
    this.SupportsContainers = options.SupportsContainers;
    this.SupportsDeleteFile = options.SupportsDeleteFile;
    this.SupportsEcosystem = options.SupportsEcosystem;
    this.SupportsExtendedLockLength = options.SupportsExtendedLockLength;
    this.SupportsFileCreation = options.SupportsFileCreation;
    this.SupportsFileUserValue = options.SupportsFileUserValue;
    this.SupportsFolders = options.SupportsFolders;
    this.SupportsGetActivities = options.SupportsGetActivities;
    this.SupportsGetLock = options.SupportsGetLock;
    this.SupportsGrantUserAccess = options.SupportsGrantUserAccess;
    this.SupportsLocks = options.SupportsLocks;
    this.SupportsPolicies = options.SupportsPolicies;
    this.SupportsRename = options.SupportsRename;
    this.SupportsReviewing = options.SupportsReviewing;
    this.SupportsScenarioLinks = options.SupportsScenarioLinks;
    this.SupportsSecureStore = options.SupportsSecureStore;
    this.SupportsUpdate = options.SupportsUpdate;
    this.SupportsUserInfo = options.SupportsUserInfo;
    this.TenantId = options.TenantId;
    this.TermsOfUseUrl = options.TermsOfUseUrl;
    this.TimeZone = options.TimeZone;
    this.UniqueContentId = options.UniqueContentId;
    this.UserCanAttend = options.UserCanAttend;
    this.UserCanNotWriteRelative = options.UserCanNotWriteRelative;
    this.UserCanPresent = options.UserCanPresent;
    this.UserCanRename = options.UserCanRename;
    this.UserCanReview = options.UserCanReview;
    this.UserCanWrite = options.UserCanWrite;
    this.UserFriendlyName = options.UserFriendlyName;
    this.UserId = options.UserId;
    this.UserInfo = options.UserInfo;
    // TODO: This is in the documentation, but not the tests. Find out which is correct
    // this.UserPrincipalName = options.UserPrincipalName ?? '';
    this.Version = options.Version;
    this.WebEditingDisabled = options.WebEditingDisabled;
    this.WorkflowType = options.WorkflowType ?? [];
    this.WorkflowUrl = options.WorkflowUrl;
  }
}
